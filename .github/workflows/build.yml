on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - run: |
          yarn install
          yarn build
        working-directory: titan-frontend
      - name: Archive titan-frontend
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: titan-frontend
          path: dist/frontend/titan-frontend
  build-docker:
    runs-on: ubuntu-latest
    needs:
      - build-go
      - build-frontend
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v2
        with:
          path: .
      - run: |
          ls **
      - name: Build Docker Image
        run: |
          echo "{\"version\": \"${TAG}\"}" > frontend/src/assets/config.json
          docker build -t ${DOCKER_HUB_IMAGE}:${TAG} .
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}
      - name: Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag ${DOCKER_HUB_IMAGE}:${TAG} ${DOCKER_HUB_IMAGE} 
          docker push ${DOCKER_HUB_IMAGE}:${TAG}
          docker push ${DOCKER_HUB_IMAGE}
        if: github.ref == 'refs/heads/master'
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}
      - name: Deploy Kubernetes
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl
          mkdir -p ~/.kube && echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          envsubst < kubernetes/postgres.yaml | kubectl apply -f -
          envsubst < kubernetes/redis.yaml | kubectl apply -f -
          envsubst < kubernetes/titan.yaml | kubectl apply -f -
        if: github.ref == 'refs/heads/master'
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}
