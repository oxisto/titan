name: build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.16
      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux go build -a cmd/server/server.go
      - name: Archive titan-frontend
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: server

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14
      - name: Build
        run: |
          echo "{\"version\": \"${TAG}\"}" > src/assets/config.json

          yarn install --ignore-optional
          yarn lint
          yarn build --configuration production
        working-directory: frontend
        env:
          TAG: ${{ github.sha }}
      - name: Archive titan-frontend
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: frontend/dist/titan-frontend

  build-docker:
    runs-on: ubuntu-latest
    needs:
      - build-server
      - build-frontend
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v2
        with:
          path: download
      - name: Put artifacts in place
        run: |
          mkdir -p frontend/dist/titan-frontend
          mv download/server/server .
          mv download/frontend/* frontend/dist/titan-frontend/
          chmod +x server
          ./sde.sh
      - name: Build Docker Image
        run: |
          docker build -t ${DOCKER_HUB_IMAGE}:${TAG} .
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}
      - name: Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag ${DOCKER_HUB_IMAGE}:${TAG} ${DOCKER_HUB_IMAGE} 
          docker push ${DOCKER_HUB_IMAGE}:${TAG}
          docker push ${DOCKER_HUB_IMAGE}
        if: github.ref == 'refs/heads/main'
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build-docker
    steps:
      - uses: actions/checkout@master
      - name: Deploy Kubernetes
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl
          mkdir -p ~/.kube && echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          envsubst < kubernetes/postgres.yaml | kubectl apply -f -
          envsubst < kubernetes/redis.yaml | kubectl apply -f -
          envsubst < kubernetes/titan.yaml | kubectl apply -f -
        env:
          DOCKER_HUB_IMAGE: oxisto/titan
          TAG: ${{ github.sha }}
